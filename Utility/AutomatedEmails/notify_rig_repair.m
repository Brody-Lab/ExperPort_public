function notify_rig_repair

try
    %pull out the broken rig IDs and the date they are flagged as broken
    [allbroke,datebroken] = bdata('select rigid, broke_date from ratinfo.rig_maintenance where isbroken=1');
    
    %Rigs in the training room stop at 38
    rigpos = find(allbroke <= 38);
    rigs = allbroke(rigpos);
    rigdate = datebroken(rigpos);
    
    %snugs are the individual pub watering units numbered in the 300s
    snugpos = find(allbroke > 299 & allbroke < 399);
    snugs = allbroke(snugpos);
    snugdate = datebroken(snugpos);
    
    %Let's run through the list of rigs and snugs and delete duplicates
    %only keeping the oldest entry
    ur = unique(rigs);
    for i = 1:numel(ur)
        if sum(rigs == ur(i)) > 1
            dates = rigdate(rigs == ur(i));
            dn = [];
            for j = 1:numel(dates)
                dn(j) = datenum(dates{j},'yyyy-mm-dd HH:MM:SS');
            end
            brokedate{i} = dates{find(dn == min(dn))};
        else
            brokedate{i} = rigdate{find(rigs == ur(i))};
        end
    end
    rigs = ur;
    rigdate = brokedate;
    
    for i = 1:numel(rigdate)
        rigbrokefor(i) = ceil(now - datenum(rigdate{i},'yyyy-mm-dd HH:MM:SS'));
    end
    
    us = unique(snugs);
    for i = 1:numel(us)
        if sum(snugs == us(i)) > 1
            dates = snugdate(snugs == us(i));
            dn = [];
            for j = 1:numel(dates)
                dn(j) = datenum(dates{j},'yyyy-mm-dd HH:MM:SS');
            end
            brokedate{i} = dates{find(dn == min(dn))};
        else
            brokedate{i} = snugdate{find(snugs == us(i))};
        end
    end
    snugs = us;
    snugdate = brokedate;
    
    for i = 1:numel(snugdate)
        snugbrokefor(i) = ceil(now - datenum(snugdate{i},'yyyy-mm-dd HH:MM:SS'));
    end
           
    [Experimenters,Emails,FixRigs] = bdata('select experimenter, email, tech_shifts from ratinfo.contacts where is_alumni=0');
    
    repair = cell(0);
    for i = 1:numel(FixRigs)
        responsiblefor = str2num(FixRigs{i});
        for j = 1:numel(responsiblefor)
            repair{responsiblefor(j)} = Experimenters{i};
        end
    end
    for i = 1:336
        if isempty(repair{i}); repair{i} = 'No one'; end
    end
    UR = unique(repair');
    
    %No we loop through each experimenter and draft an email to them
    for i = 1:numel(Experimenters)
        
        responsiblefor = find(strcmp(repair,Experimenters{i}));
        %loop through all the rigs and snugs this experimenter is
        %responsible for
        
        rigsneedfixing = [];
        if ~isempty(rigs)
            for j = 1:numel(responsiblefor)
                if sum(rigs == responsiblefor(j)) > 0

                    if isempty(rigsneedfixing)
                        rigsneedfixing = num2str(responsiblefor(j));
                    else
                        rigsneedfixing = [rigsneedfixing,', ',num2str(responsiblefor(j))];
                    end
                end
            end
        end
            
        snugsneedfixing = [];
        if ~isempty(snugs)
            for j = 1:numel(responsiblefor)
                if sum(snugs == responsiblefor(j)) > 0

                    if isempty(snugsneedfixing)
                        snugsneedfixing = num2str(responsiblefor(j));
                    else
                        snugsneedfixing = [snugsneedfixing,', ',num2str(responsiblefor(j))];
                    end
                end
            end
        end
        
        message = cell(0);
        if ~isempty(rigsneedfixing)
            message{end+1} = 'The following rigs require repair:';
            message{end+1} = rigsneedfixing;
            message{end+1} = ' ';
        end
        
        if ~isempty(snugsneedfixing)
            message{end+1} = 'The following snugs require repair:';
            message{end+1} = snugsneedfixing;
            message{end+1} = ' ';
        end
        
        if ~isempty(message)
            if strcmp(datestr(now,'D'),'S') || strcmp(datestr(now,'D'),'U')
                message{end+1} = 'Please make every effort to repair these by Tuesday.';
            else
                message{end+1} = 'Please make every effort to repair these within 2 days.';
            end
            message{end+1} = ' ';

            IP = get_network_info;
            if ischar(IP); message{end+1} = ['Email generated by ',IP];
            else           message{end+1} = 'Email generated by an unknown computer!!!';
            end
            message{end+1} = 'ratter\ExperPort\Utility\AutomatedEmails\notify_rig_repair.m';
        
            disp(Experimenters{i});
            disp(message');
            disp(' ');
            disp(' ');
            disp(' ');
    
            %prepare the Title of the email.
            subjectline = 'Repair Notification';

            %send the email
            set_email_sender
            sendmail(Emails{i},subjectline,message);   
        end
    end
catch %#ok<CTCH>
   senderror_report;  
end
